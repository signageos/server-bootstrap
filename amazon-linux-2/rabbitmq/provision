#!/bin/bash

set -e

function show_usage() {
	printf "\n"
	printf "Options:\n"
	printf " --instances|-i, Instances count which will run rabbitmq\n"
	printf " --start_ip|-p, ip addresses start of range\n"
	printf " --type|-t, Master or slave\n"
	printf " --erlang_cookie|-e, Erlang cookie for clustering authentication\n"
	printf " --rabbit_version|-r, RabbitMQ version\n"
	printf " --erlang_version|-l, Erlang version\n"

	return 1
}

while [ ! -z "$1" ]; do
  case "$1" in
     --instances|-i)
         shift
         INSTANCES_COUNT=$1
         ;;
     --start_ip|-p)
         shift
         START_IP=$1
         ;;
     --type|-t)
        shift
        TYPE=$1
         ;;
     --erlang_cookie|-e)
        shift
        ERLANG_COOKIE=$1
        ;;
     --rabbit_version|-r)
        shift
        RABBIT_VERSION=$1
        ;;
     --erlang_version|-l)
        shift
        ERLANG_VERSION=$1
        ;;
     *)
        show_usage
        ;;
  esac
shift
done

if [ -z "$INSTANCES_COUNT" ] ; then
	echo "Supply instances count argument."
	exit 1
fi

if [ -z "$START_IP" ] ; then
	echo "Supply start ip argument."
	exit 1
fi

if [ -z "$TYPE" ] ; then
	echo "Supply type argument."
	exit 1
fi

if [ -z "$ERLANG_COOKIE" ] ; then
	echo "Supply erlang cookie argument."
	exit 1
fi

function handle_hosts() {
	echo "$START_IP" | awk -v count="$INSTANCES_COUNT" -F"." '{
		for (i = 0; i < count; ++i) {
			tmp = $1 "." $2 "." $3 "." $4 + i
			tmp = tmp "    ip-" $1 "-" $2 "-" $3 "-" $4 + i
			print tmp
		}
	}' > /tmp/generated_hosts.txt

	printf "\n%s\n" "$(cat /tmp/generated_hosts.txt)"
	echo "Lines above will be written to /etc/hosts"
	sleep 10s
	printf "\n%s\n" "$(cat /tmp/generated_hosts.txt)" >> /etc/hosts
	rm -f /tmp/generated_hosts.txt
}

# installs erlang and rabbitmq
function install_prerequisites() {
	curl -s https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh | bash

	if [[ -n $ERLANG_VERSION ]] ; then
		yum install -y "erlang-$ERLANG_VERSION" 2>>/root/err.txt
	else
		yum install -y erlang
	fi

	curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh | bash

	if [[ -n $RABBIT_VERSION ]] ; then
		yum install -y "rabbitmq-server-$RABBIT_VERSION" 2>>/root/err.txt
	else
		yum install -y rabbitmq-server
	fi

}

function start_prerequisites() {
	chkconfig rabbitmq-server on
	service rabbitmq-server start
	rabbitmq-plugins enable rabbitmq_management
	rabbitmq-plugins enable rabbitmq_prometheus
}

function configure_rabbitmq() {
	echo -n "$ERLANG_COOKIE" > /var/lib/rabbitmq/.erlang.cookie

	echo "ulimit -S -n 4096" > /etc/default/rabbitmq-server

	echo "rabbitmq         soft    nofile          1000000" >  /etc/security/limits.conf
	echo "rabbitmq         hard    nofile          1000000" >> /etc/security/limits.conf
}

function execute_after_reboot() {
	TYPE=$1

	if [ "$TYPE" != "master" ] ; then
		TYPE=slave
	fi

	if [ "$TYPE" == "slave" ] ; then

		MASTER_CLUSTER_NAME="rabbit@ip-$(echo -n "$START_IP" | sed 's/\./-/g')"

		cat <<- EOF > /root/join_cluster.sh
		#!/bin/bash

		set -e

		echo "Await rabbit to start" >/root/log.txt
		/sbin/rabbitmqctl await_startup 2>>/root/err.txt

		echo "Trying to join cluster" > /root/log.txt

		/sbin/rabbitmqctl stop_app 2>>/root/err.txt
		echo "Rabbit stopped" >>/root/log.txt

		/sbin/rabbitmqctl join_cluster $MASTER_CLUSTER_NAME >>/root/log.txt 2>>/root/err.txt
		echo "Joined cluster to $MASTER_CLUSTER_NAME" >>/root/log.txt

		/sbin/rabbitmqctl start_app 2>>/root/err.txt
		echo "Rabbit started" >> /root/log.txt

		# remove itself after 1st reboot
		rm -f /root/join_cluster_cron
		crontab -r
		rm -f /root/join_cluster.sh

		EOF

		chmod +x /root/join_cluster.sh
		echo "@reboot /root/join_cluster.sh" > /root/join_cluster_cron
		crontab /root/join_cluster_cron
	fi
}

install_prerequisites
start_prerequisites

handle_hosts

configure_rabbitmq

execute_after_reboot "$TYPE"

echo "Prepare to reboot"

nohup bash -c '(sleep 10s && reboot) &'
